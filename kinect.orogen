name "kinect"

using_library "opencv"
using_library "base-types"
using_library "libfreenect"

import_types_from "base"

task_context "Task" do
#   output_port("rgbd_pointcloud", ro_ptr("/base/samples/Pointcloud")).
   output_port("rgbd_pointcloud", "/base/samples/Pointcloud").
        doc("rgbd point cloud from Camera")

   output_port("video_frame", ro_ptr("/base/samples/frame/Frame")).
        doc("video image retrieved from Camera")

   output_port("depth_image", ro_ptr("/base/samples/DistanceImage")).
        doc("depth image retrieved from Camera")

   output_port("tilt_angle", "/base/Angle").
        doc("current tilt angle from kinect sensor")


   input_port("tilt_command", "/base/Angle").
        doc("tilt command for controlling kinect's sensor servo")

   property("device_id", "int", 0).
        doc("selects a specific kinect device if more than one are connected")


   property("freenect_flooding_log", "bool", false).
        doc("show freenects flooding debug logs when BASE_LOG_LEVEL = debug")

   property("video_capturing", "bool", true).
        doc("en- or disable video capturing in freenect driver")

   property("video_width", "int", 640).
        doc("requested width for the image. This tasks chooses automatically a suitable format")

   property("video_height", "int", 480).
        doc("requested height for the image. This tasks chooses automatically a suitable format")

   property("video_format", "/base/samples/frame/frame_mode_t", :MODE_BAYER).
        doc("supported formats are MODE_RGB, MODE_BAYER and MODE_GRAYSCALE (infrared image)")

   property("depth_capturing", "bool", true).
        doc("en- or disable depth capturing in freenect driver")

   runtime_states :TILT_MOVING, :TILT_LIMIT

   default_activity 'periodic', 0.1
end

